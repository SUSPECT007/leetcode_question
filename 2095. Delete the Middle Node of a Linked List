
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
//两个变量，慢的走一步，快的走两步。
//快的走到头，慢的就是目标。
//但若直接开始会导致快一步。
//所以会从0，new一个开始或者用一个新变量记录一下


//1.new L & H
// class Solution {
// public:
//     ListNode* deleteMiddle(ListNode* head) {
//         if (head==NULL||head->next==NULL) return NULL;
        
//         ListNode* L,*H;
//         L=new ListNode(0);
//         L->next=head;
//         H=L;
        
//         while(H->next !=NULL && H->next->next !=NULL){
            
//             L=L->next;
//             H=H->next->next;
//         }
//         L->next=L->next->next;
//         return head;
//     }
// };

//2. other variable
class Solution {
public:
    ListNode* deleteMiddle(ListNode* head) {
        if (head==NULL||head->next==NULL) return NULL;
        
        ListNode* L=head,* H=head,* I=NULL;
        
        while(H !=NULL && H->next  !=NULL){      //be different from 1
            I=L;
            L=L->next;
            H=H->next->next;
        }
        I->next=L->next;
        delete L;
        return head;
    }
};

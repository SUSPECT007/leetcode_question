/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
map<int,int> count;
void solve(TreeNode* root){
    if(!root) return ;
    count[root->val]++;
    solve(root->right);
    solve(root->left);
}
    vector<int> findMode(TreeNode* root) {
        vector<int> ans;
        solve(root);
        int max=0,index;
        for(map<int,int>::iterator it=count.begin();it!=count.end();++it ){
            if(it->second>max) {max=it->second;ans.clear();ans.push_back(it->first);}
            else if (it->second==max) ans.push_back(it->first);
            //{max=it->second;index=it->first;}
        }
       // ans.push_back(index);
        return ans;

    }
};

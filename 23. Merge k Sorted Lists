/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
     ListNode* connect(ListNode *l1,ListNode *l2){
         ListNode *ans,*tmp,*p,*q;
         ans=new ListNode;tmp=ans;
         while (l1&&l2){
             if (l1->val<=l2->val){
                 tmp->next=l1;
                 l1=l1->next;
                 tmp=tmp->next;
             }
             else{
                 tmp->next=l2;
                 l2=l2->next;
                 tmp=tmp->next;

             }
         }
         if (l1) tmp->next=l1;else if(l2) tmp->next=l2;
         return ans->next;

     }
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        if (lists.empty()) return NULL;
        ListNode *ans=lists[0],*tmp,*p,*q;
        int n=lists.size();
        for(int i=1;i<n;i++){
            ans=connect(ans,lists[i]);
        }
        return ans;

    }
};
